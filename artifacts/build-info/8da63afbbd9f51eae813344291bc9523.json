{
	"id": "8da63afbbd9f51eae813344291bc9523",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"36_SelfDestruct.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n// selfdestruct\n//  - delete contract\n//  - force send Ether to any address\n\ncontract Kill {\n    constructor() payable {}\n\n    function kill() external {\n        selfdestruct(payable(msg.sender));\n    }\n\n    // after kill and this method not return \n    function testCall() external pure returns(uint){\n        return 123;\n    }\n}\n\n\ncontract Helper{\n\n    constructor() payable{}\n\n    function getBalance() external view returns (uint){\n        return address(this).balance;\n    }\n\n    function invokeKill(Kill _kill) external{\n        _kill.kill();\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"36_SelfDestruct.sol": {
				"Helper": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "payable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "getBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract Kill",
									"name": "_kill",
									"type": "address"
								}
							],
							"name": "invokeKill",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"36_SelfDestruct.sol\":390:613  contract Helper{... */\n  mstore(0x40, 0x80)\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"36_SelfDestruct.sol\":390:613  contract Helper{... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x12065fe0\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xfd5d8428\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"36_SelfDestruct.sol\":441:536  function getBalance() external view returns (uint){... */\n    tag_3:\n      tag_5\n      tag_6\n      jump\t// in\n    tag_5:\n      mload(0x40)\n      tag_7\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"36_SelfDestruct.sol\":542:611  function invokeKill(Kill _kill) external{... */\n    tag_4:\n      tag_9\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      tag_12\n      jump\t// in\n    tag_9:\n      stop\n        /* \"36_SelfDestruct.sol\":441:536  function getBalance() external view returns (uint){... */\n    tag_6:\n        /* \"36_SelfDestruct.sol\":486:490  uint */\n      0x00\n        /* \"36_SelfDestruct.sol\":508:529  address(this).balance */\n      selfbalance\n        /* \"36_SelfDestruct.sol\":501:529  return address(this).balance */\n      swap1\n      pop\n        /* \"36_SelfDestruct.sol\":441:536  function getBalance() external view returns (uint){... */\n      swap1\n      jump\t// out\n        /* \"36_SelfDestruct.sol\":542:611  function invokeKill(Kill _kill) external{... */\n    tag_12:\n        /* \"36_SelfDestruct.sol\":592:597  _kill */\n      dup1\n        /* \"36_SelfDestruct.sol\":592:602  _kill.kill */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x41c0e1b5\n        /* \"36_SelfDestruct.sol\":592:604  _kill.kill() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_15:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_17\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_17:\n      pop\n      pop\n      pop\n      pop\n        /* \"36_SelfDestruct.sol\":542:611  function invokeKill(Kill _kill) external{... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:168   */\n    tag_19:\n        /* \"#utility.yul\":64:69   */\n      0x00\n        /* \"#utility.yul\":102:108   */\n      dup2\n        /* \"#utility.yul\":89:109   */\n      calldataload\n        /* \"#utility.yul\":80:109   */\n      swap1\n      pop\n        /* \"#utility.yul\":118:162   */\n      tag_21\n        /* \"#utility.yul\":156:161   */\n      dup2\n        /* \"#utility.yul\":118:162   */\n      tag_22\n      jump\t// in\n    tag_21:\n        /* \"#utility.yul\":7:168   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":174:525   */\n    tag_11:\n        /* \"#utility.yul\":244:250   */\n      0x00\n        /* \"#utility.yul\":293:295   */\n      0x20\n        /* \"#utility.yul\":281:290   */\n      dup3\n        /* \"#utility.yul\":272:279   */\n      dup5\n        /* \"#utility.yul\":268:291   */\n      sub\n        /* \"#utility.yul\":264:296   */\n      slt\n        /* \"#utility.yul\":261:380   */\n      iszero\n      tag_24\n      jumpi\n        /* \"#utility.yul\":299:378   */\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n        /* \"#utility.yul\":261:380   */\n    tag_24:\n        /* \"#utility.yul\":419:420   */\n      0x00\n        /* \"#utility.yul\":444:508   */\n      tag_27\n        /* \"#utility.yul\":500:507   */\n      dup5\n        /* \"#utility.yul\":491:497   */\n      dup3\n        /* \"#utility.yul\":480:489   */\n      dup6\n        /* \"#utility.yul\":476:498   */\n      add\n        /* \"#utility.yul\":444:508   */\n      tag_19\n      jump\t// in\n    tag_27:\n        /* \"#utility.yul\":434:508   */\n      swap2\n      pop\n        /* \"#utility.yul\":390:518   */\n      pop\n        /* \"#utility.yul\":174:525   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":531:649   */\n    tag_28:\n        /* \"#utility.yul\":618:642   */\n      tag_30\n        /* \"#utility.yul\":636:641   */\n      dup2\n        /* \"#utility.yul\":618:642   */\n      tag_31\n      jump\t// in\n    tag_30:\n        /* \"#utility.yul\":613:616   */\n      dup3\n        /* \"#utility.yul\":606:643   */\n      mstore\n        /* \"#utility.yul\":531:649   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":655:877   */\n    tag_8:\n        /* \"#utility.yul\":748:752   */\n      0x00\n        /* \"#utility.yul\":786:788   */\n      0x20\n        /* \"#utility.yul\":775:784   */\n      dup3\n        /* \"#utility.yul\":771:789   */\n      add\n        /* \"#utility.yul\":763:789   */\n      swap1\n      pop\n        /* \"#utility.yul\":799:870   */\n      tag_33\n        /* \"#utility.yul\":867:868   */\n      0x00\n        /* \"#utility.yul\":856:865   */\n      dup4\n        /* \"#utility.yul\":852:869   */\n      add\n        /* \"#utility.yul\":843:849   */\n      dup5\n        /* \"#utility.yul\":799:870   */\n      tag_28\n      jump\t// in\n    tag_33:\n        /* \"#utility.yul\":655:877   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":964:1060   */\n    tag_36:\n        /* \"#utility.yul\":1001:1008   */\n      0x00\n        /* \"#utility.yul\":1030:1054   */\n      tag_38\n        /* \"#utility.yul\":1048:1053   */\n      dup3\n        /* \"#utility.yul\":1030:1054   */\n      tag_39\n      jump\t// in\n    tag_38:\n        /* \"#utility.yul\":1019:1054   */\n      swap1\n      pop\n        /* \"#utility.yul\":964:1060   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1066:1173   */\n    tag_40:\n        /* \"#utility.yul\":1114:1121   */\n      0x00\n        /* \"#utility.yul\":1143:1167   */\n      tag_42\n        /* \"#utility.yul\":1161:1166   */\n      dup3\n        /* \"#utility.yul\":1143:1167   */\n      tag_36\n      jump\t// in\n    tag_42:\n        /* \"#utility.yul\":1132:1167   */\n      swap1\n      pop\n        /* \"#utility.yul\":1066:1173   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1179:1305   */\n    tag_39:\n        /* \"#utility.yul\":1216:1223   */\n      0x00\n        /* \"#utility.yul\":1256:1298   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1249:1254   */\n      dup3\n        /* \"#utility.yul\":1245:1299   */\n      and\n        /* \"#utility.yul\":1234:1299   */\n      swap1\n      pop\n        /* \"#utility.yul\":1179:1305   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1311:1388   */\n    tag_31:\n        /* \"#utility.yul\":1348:1355   */\n      0x00\n        /* \"#utility.yul\":1377:1382   */\n      dup2\n        /* \"#utility.yul\":1366:1382   */\n      swap1\n      pop\n        /* \"#utility.yul\":1311:1388   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1517:1634   */\n    tag_26:\n        /* \"#utility.yul\":1626:1627   */\n      0x00\n        /* \"#utility.yul\":1623:1624   */\n      dup1\n        /* \"#utility.yul\":1616:1628   */\n      revert\n        /* \"#utility.yul\":1640:1784   */\n    tag_22:\n        /* \"#utility.yul\":1724:1759   */\n      tag_49\n        /* \"#utility.yul\":1753:1758   */\n      dup2\n        /* \"#utility.yul\":1724:1759   */\n      tag_40\n      jump\t// in\n    tag_49:\n        /* \"#utility.yul\":1717:1722   */\n      dup2\n        /* \"#utility.yul\":1714:1760   */\n      eq\n        /* \"#utility.yul\":1704:1778   */\n      tag_50\n      jumpi\n        /* \"#utility.yul\":1774:1775   */\n      0x00\n        /* \"#utility.yul\":1771:1772   */\n      dup1\n        /* \"#utility.yul\":1764:1776   */\n      revert\n        /* \"#utility.yul\":1704:1778   */\n    tag_50:\n        /* \"#utility.yul\":1640:1784   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212201246aac9e5846548569ea91359288caa3659208fd745166a11b871beacba691364736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_30": {
									"entryPoint": null,
									"id": 30,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60806040526101ec806100136000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806312065fe01461003b578063fd5d842814610059575b600080fd5b610043610075565b6040516100509190610131565b60405180910390f35b610073600480360381019061006e91906100f5565b61007d565b005b600047905090565b8073ffffffffffffffffffffffffffffffffffffffff166341c0e1b56040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156100c557600080fd5b505af11580156100d9573d6000803e3d6000fd5b5050505050565b6000813590506100ef8161019f565b92915050565b60006020828403121561010b5761010a61019a565b5b6000610119848285016100e0565b91505092915050565b61012b81610190565b82525050565b60006020820190506101466000830184610122565b92915050565b600061015782610170565b9050919050565b60006101698261014c565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600080fd5b6101a88161015e565b81146101b357600080fd5b5056fea26469706673582212201246aac9e5846548569ea91359288caa3659208fd745166a11b871beacba691364736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH2 0x1EC DUP1 PUSH2 0x13 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x12065FE0 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xFD5D8428 EQ PUSH2 0x59 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x75 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x131 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x73 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6E SWAP2 SWAP1 PUSH2 0xF5 JUMP JUMPDEST PUSH2 0x7D JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SELFBALANCE SWAP1 POP SWAP1 JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x41C0E1B5 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xEF DUP2 PUSH2 0x19F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10B JUMPI PUSH2 0x10A PUSH2 0x19A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x119 DUP5 DUP3 DUP6 ADD PUSH2 0xE0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x12B DUP2 PUSH2 0x190 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x146 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x122 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x157 DUP3 PUSH2 0x170 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x169 DUP3 PUSH2 0x14C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A8 DUP2 PUSH2 0x15E JUMP JUMPDEST DUP2 EQ PUSH2 0x1B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLT CHAINID 0xAA 0xC9 0xE5 DUP5 PUSH6 0x48569EA91359 0x28 DUP13 0xAA CALLDATASIZE MSIZE KECCAK256 DUP16 0xD7 GASLIMIT AND PUSH11 0x11B871BEACBA691364736F PUSH13 0x63430008070033000000000000 ",
							"sourceMap": "390:223:0:-:0;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@getBalance_42": {
									"entryPoint": 117,
									"id": 42,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@invokeKill_54": {
									"entryPoint": 125,
									"id": 54,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_contract$_Kill_$26": {
									"entryPoint": 224,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_Kill_$26": {
									"entryPoint": 245,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 290,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 305,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 332,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_Kill_$26": {
									"entryPoint": 350,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 368,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 400,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 410,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_Kill_$26": {
									"entryPoint": 415,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1787:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "70:98:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "80:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "102:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "89:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "89:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "80:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "156:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_Kill_$26",
																	"nodeType": "YulIdentifier",
																	"src": "118:37:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "118:44:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "118:44:1"
														}
													]
												},
												"name": "abi_decode_t_contract$_Kill_$26",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "48:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "56:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "64:5:1",
														"type": ""
													}
												],
												"src": "7:161:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "251:274:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "297:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "299:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "299:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "299:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "272:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "281:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "268:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "268:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "293:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "264:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "264:32:1"
															},
															"nodeType": "YulIf",
															"src": "261:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "390:128:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "405:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "419:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "409:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "434:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "480:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "491:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "476:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "476:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "500:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_Kill_$26",
																			"nodeType": "YulIdentifier",
																			"src": "444:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "444:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "434:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_Kill_$26",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "221:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "232:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "244:6:1",
														"type": ""
													}
												],
												"src": "174:351:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "596:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "613:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "636:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "618:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "618:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "606:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "606:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "606:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "584:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "591:3:1",
														"type": ""
													}
												],
												"src": "531:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "753:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "763:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "775:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "786:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "771:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "771:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "763:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "843:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "856:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "867:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "852:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "852:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "799:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "799:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "799:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "725:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "737:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "748:4:1",
														"type": ""
													}
												],
												"src": "655:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "923:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "933:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "949:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "943:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "943:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "933:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "916:6:1",
														"type": ""
													}
												],
												"src": "883:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1009:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1019:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1048:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1030:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1030:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1019:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "991:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1001:7:1",
														"type": ""
													}
												],
												"src": "964:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1122:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1132:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1161:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1143:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1143:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1132:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_Kill_$26",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1104:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1114:7:1",
														"type": ""
													}
												],
												"src": "1066:107:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1224:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1234:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1249:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1256:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1245:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1245:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1234:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1206:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1216:7:1",
														"type": ""
													}
												],
												"src": "1179:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1356:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1366:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1377:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1366:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1338:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1348:7:1",
														"type": ""
													}
												],
												"src": "1311:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1483:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1500:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1503:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1493:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1493:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1493:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "1394:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1606:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1623:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1626:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1616:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1616:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1616:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1517:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1694:90:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1762:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1771:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1774:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1764:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1764:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1764:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1717:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1753:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_Kill_$26",
																					"nodeType": "YulIdentifier",
																					"src": "1724:28:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1724:35:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1714:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1714:46:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1707:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1707:54:1"
															},
															"nodeType": "YulIf",
															"src": "1704:74:1"
														}
													]
												},
												"name": "validator_revert_t_contract$_Kill_$26",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1687:5:1",
														"type": ""
													}
												],
												"src": "1640:144:1"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_contract$_Kill_$26(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_Kill_$26(value)\n    }\n\n    function abi_decode_tuple_t_contract$_Kill_$26(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_Kill_$26(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_Kill_$26(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_contract$_Kill_$26(value) {\n        if iszero(eq(value, cleanup_t_contract$_Kill_$26(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100365760003560e01c806312065fe01461003b578063fd5d842814610059575b600080fd5b610043610075565b6040516100509190610131565b60405180910390f35b610073600480360381019061006e91906100f5565b61007d565b005b600047905090565b8073ffffffffffffffffffffffffffffffffffffffff166341c0e1b56040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156100c557600080fd5b505af11580156100d9573d6000803e3d6000fd5b5050505050565b6000813590506100ef8161019f565b92915050565b60006020828403121561010b5761010a61019a565b5b6000610119848285016100e0565b91505092915050565b61012b81610190565b82525050565b60006020820190506101466000830184610122565b92915050565b600061015782610170565b9050919050565b60006101698261014c565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600080fd5b6101a88161015e565b81146101b357600080fd5b5056fea26469706673582212201246aac9e5846548569ea91359288caa3659208fd745166a11b871beacba691364736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x12065FE0 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xFD5D8428 EQ PUSH2 0x59 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x75 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x131 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x73 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6E SWAP2 SWAP1 PUSH2 0xF5 JUMP JUMPDEST PUSH2 0x7D JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SELFBALANCE SWAP1 POP SWAP1 JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x41C0E1B5 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xEF DUP2 PUSH2 0x19F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10B JUMPI PUSH2 0x10A PUSH2 0x19A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x119 DUP5 DUP3 DUP6 ADD PUSH2 0xE0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x12B DUP2 PUSH2 0x190 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x146 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x122 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x157 DUP3 PUSH2 0x170 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x169 DUP3 PUSH2 0x14C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A8 DUP2 PUSH2 0x15E JUMP JUMPDEST DUP2 EQ PUSH2 0x1B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLT CHAINID 0xAA 0xC9 0xE5 DUP5 PUSH6 0x48569EA91359 0x28 DUP13 0xAA CALLDATASIZE MSIZE KECCAK256 DUP16 0xD7 GASLIMIT AND PUSH11 0x11B871BEACBA691364736F PUSH13 0x63430008070033000000000000 ",
							"sourceMap": "390:223:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;441:95;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;542:69;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;441:95;486:4;508:21;501:28;;441:95;:::o;542:69::-;592:5;:10;;;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;542:69;:::o;7:161:1:-;64:5;102:6;89:20;80:29;;118:44;156:5;118:44;:::i;:::-;7:161;;;;:::o;174:351::-;244:6;293:2;281:9;272:7;268:23;264:32;261:119;;;299:79;;:::i;:::-;261:119;419:1;444:64;500:7;491:6;480:9;476:22;444:64;:::i;:::-;434:74;;390:128;174:351;;;;:::o;531:118::-;618:24;636:5;618:24;:::i;:::-;613:3;606:37;531:118;;:::o;655:222::-;748:4;786:2;775:9;771:18;763:26;;799:71;867:1;856:9;852:17;843:6;799:71;:::i;:::-;655:222;;;;:::o;964:96::-;1001:7;1030:24;1048:5;1030:24;:::i;:::-;1019:35;;964:96;;;:::o;1066:107::-;1114:7;1143:24;1161:5;1143:24;:::i;:::-;1132:35;;1066:107;;;:::o;1179:126::-;1216:7;1256:42;1249:5;1245:54;1234:65;;1179:126;;;:::o;1311:77::-;1348:7;1377:5;1366:16;;1311:77;;;:::o;1517:117::-;1626:1;1623;1616:12;1640:144;1724:35;1753:5;1724:35;:::i;:::-;1717:5;1714:46;1704:74;;1774:1;1771;1764:12;1704:74;1640:144;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "98400",
								"executionCost": "123",
								"totalCost": "98523"
							},
							"external": {
								"getBalance()": "317",
								"invokeKill(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 390,
									"end": 613,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 390,
									"end": 613,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 390,
									"end": 613,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 390,
									"end": 613,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 390,
									"end": 613,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 390,
									"end": 613,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 390,
									"end": 613,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 390,
									"end": 613,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 390,
									"end": 613,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 390,
									"end": 613,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201246aac9e5846548569ea91359288caa3659208fd745166a11b871beacba691364736f6c63430008070033",
									".code": [
										{
											"begin": 390,
											"end": 613,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 390,
											"end": 613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 390,
											"end": 613,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 390,
											"end": 613,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 390,
											"end": 613,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 390,
											"end": 613,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 390,
											"end": 613,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 390,
											"end": 613,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 390,
											"end": 613,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 390,
											"end": 613,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 390,
											"end": 613,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 390,
											"end": 613,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 390,
											"end": 613,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 390,
											"end": 613,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 390,
											"end": 613,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 390,
											"end": 613,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 390,
											"end": 613,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 390,
											"end": 613,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 390,
											"end": 613,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 390,
											"end": 613,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 390,
											"end": 613,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 390,
											"end": 613,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 390,
											"end": 613,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 390,
											"end": 613,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 390,
											"end": 613,
											"name": "PUSH",
											"source": 0,
											"value": "12065FE0"
										},
										{
											"begin": 390,
											"end": 613,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 390,
											"end": 613,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 390,
											"end": 613,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 390,
											"end": 613,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 390,
											"end": 613,
											"name": "PUSH",
											"source": 0,
											"value": "FD5D8428"
										},
										{
											"begin": 390,
											"end": 613,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 390,
											"end": 613,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 390,
											"end": 613,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 390,
											"end": 613,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 390,
											"end": 613,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 390,
											"end": 613,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 390,
											"end": 613,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 390,
											"end": 613,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 441,
											"end": 536,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 441,
											"end": 536,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 441,
											"end": 536,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 441,
											"end": 536,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 441,
											"end": 536,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 441,
											"end": 536,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 441,
											"end": 536,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 441,
											"end": 536,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 441,
											"end": 536,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 441,
											"end": 536,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 441,
											"end": 536,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 441,
											"end": 536,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 441,
											"end": 536,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 441,
											"end": 536,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 441,
											"end": 536,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 441,
											"end": 536,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 441,
											"end": 536,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 441,
											"end": 536,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 441,
											"end": 536,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 441,
											"end": 536,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 441,
											"end": 536,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 441,
											"end": 536,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 441,
											"end": 536,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 542,
											"end": 611,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 542,
											"end": 611,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 542,
											"end": 611,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 542,
											"end": 611,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 542,
											"end": 611,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 542,
											"end": 611,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 542,
											"end": 611,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 542,
											"end": 611,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 542,
											"end": 611,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 542,
											"end": 611,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 542,
											"end": 611,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 542,
											"end": 611,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 542,
											"end": 611,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 542,
											"end": 611,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 542,
											"end": 611,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 542,
											"end": 611,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 542,
											"end": 611,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 542,
											"end": 611,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 542,
											"end": 611,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 542,
											"end": 611,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 542,
											"end": 611,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 542,
											"end": 611,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 441,
											"end": 536,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 441,
											"end": 536,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 486,
											"end": 490,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 508,
											"end": 529,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 501,
											"end": 529,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 501,
											"end": 529,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 441,
											"end": 536,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 441,
											"end": 536,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 542,
											"end": 611,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 542,
											"end": 611,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 592,
											"end": 597,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 592,
											"end": 602,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 592,
											"end": 602,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 592,
											"end": 602,
											"name": "PUSH",
											"source": 0,
											"value": "41C0E1B5"
										},
										{
											"begin": 592,
											"end": 604,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 592,
											"end": 604,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 592,
											"end": 604,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 592,
											"end": 604,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 592,
											"end": 604,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 592,
											"end": 604,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 592,
											"end": 604,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 592,
											"end": 604,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 592,
											"end": 604,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 592,
											"end": 604,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 592,
											"end": 604,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 592,
											"end": 604,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 592,
											"end": 604,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 592,
											"end": 604,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 592,
											"end": 604,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 592,
											"end": 604,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 592,
											"end": 604,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 592,
											"end": 604,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 592,
											"end": 604,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 592,
											"end": 604,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 592,
											"end": 604,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 592,
											"end": 604,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 592,
											"end": 604,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 592,
											"end": 604,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 592,
											"end": 604,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 592,
											"end": 604,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 592,
											"end": 604,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 592,
											"end": 604,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 592,
											"end": 604,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 592,
											"end": 604,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 592,
											"end": 604,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 592,
											"end": 604,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 592,
											"end": 604,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 592,
											"end": 604,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 592,
											"end": 604,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 592,
											"end": 604,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 592,
											"end": 604,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 592,
											"end": 604,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 592,
											"end": 604,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 592,
											"end": 604,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 592,
											"end": 604,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 592,
											"end": 604,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 592,
											"end": 604,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 592,
											"end": 604,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 592,
											"end": 604,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 592,
											"end": 604,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 592,
											"end": 604,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 592,
											"end": 604,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 592,
											"end": 604,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 592,
											"end": 604,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 592,
											"end": 604,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 592,
											"end": 604,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 592,
											"end": 604,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 542,
											"end": 611,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 542,
											"end": 611,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 168,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 7,
											"end": 168,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 64,
											"end": 69,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 108,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 89,
											"end": 109,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 80,
											"end": 109,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 80,
											"end": 109,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 118,
											"end": 162,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 156,
											"end": 161,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 118,
											"end": 162,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 118,
											"end": 162,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 118,
											"end": 162,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 118,
											"end": 162,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7,
											"end": 168,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7,
											"end": 168,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 168,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 168,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 168,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 174,
											"end": 525,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 174,
											"end": 525,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 244,
											"end": 250,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 293,
											"end": 295,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 281,
											"end": 290,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 272,
											"end": 279,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 268,
											"end": 291,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 264,
											"end": 296,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 261,
											"end": 380,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 261,
											"end": 380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 261,
											"end": 380,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 299,
											"end": 378,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 299,
											"end": 378,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 299,
											"end": 378,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 299,
											"end": 378,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 299,
											"end": 378,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 261,
											"end": 380,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 261,
											"end": 380,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 419,
											"end": 420,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 444,
											"end": 508,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 500,
											"end": 507,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 491,
											"end": 497,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 480,
											"end": 489,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 476,
											"end": 498,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 444,
											"end": 508,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 444,
											"end": 508,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 444,
											"end": 508,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 444,
											"end": 508,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 434,
											"end": 508,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 434,
											"end": 508,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 390,
											"end": 518,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 174,
											"end": 525,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 174,
											"end": 525,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 174,
											"end": 525,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 174,
											"end": 525,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 174,
											"end": 525,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 531,
											"end": 649,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 531,
											"end": 649,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 618,
											"end": 642,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 636,
											"end": 641,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 618,
											"end": 642,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 618,
											"end": 642,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 618,
											"end": 642,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 618,
											"end": 642,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 613,
											"end": 616,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 606,
											"end": 643,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 531,
											"end": 649,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 531,
											"end": 649,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 531,
											"end": 649,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 655,
											"end": 877,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 655,
											"end": 877,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 748,
											"end": 752,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 786,
											"end": 788,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 775,
											"end": 784,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 771,
											"end": 789,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 763,
											"end": 789,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 763,
											"end": 789,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 799,
											"end": 870,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 867,
											"end": 868,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 856,
											"end": 865,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 852,
											"end": 869,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 843,
											"end": 849,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 799,
											"end": 870,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 799,
											"end": 870,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 799,
											"end": 870,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 799,
											"end": 870,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 655,
											"end": 877,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 655,
											"end": 877,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 655,
											"end": 877,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 655,
											"end": 877,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 655,
											"end": 877,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 964,
											"end": 1060,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 964,
											"end": 1060,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1001,
											"end": 1008,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1030,
											"end": 1054,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1048,
											"end": 1053,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1054,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1030,
											"end": 1054,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1030,
											"end": 1054,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1030,
											"end": 1054,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1019,
											"end": 1054,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1019,
											"end": 1054,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 964,
											"end": 1060,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 964,
											"end": 1060,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 964,
											"end": 1060,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 964,
											"end": 1060,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1066,
											"end": 1173,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1066,
											"end": 1173,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1114,
											"end": 1121,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1143,
											"end": 1167,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1161,
											"end": 1166,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1143,
											"end": 1167,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1143,
											"end": 1167,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1143,
											"end": 1167,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1143,
											"end": 1167,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1132,
											"end": 1167,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1132,
											"end": 1167,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1066,
											"end": 1173,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1066,
											"end": 1173,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1066,
											"end": 1173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1066,
											"end": 1173,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1179,
											"end": 1305,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1179,
											"end": 1305,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1216,
											"end": 1223,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1256,
											"end": 1298,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1249,
											"end": 1254,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1245,
											"end": 1299,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1234,
											"end": 1299,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1234,
											"end": 1299,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1179,
											"end": 1305,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1179,
											"end": 1305,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1179,
											"end": 1305,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1179,
											"end": 1305,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1311,
											"end": 1388,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1311,
											"end": 1388,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1348,
											"end": 1355,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1377,
											"end": 1382,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1366,
											"end": 1382,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1366,
											"end": 1382,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1311,
											"end": 1388,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1311,
											"end": 1388,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1311,
											"end": 1388,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1311,
											"end": 1388,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1517,
											"end": 1634,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1517,
											"end": 1634,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1626,
											"end": 1627,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1623,
											"end": 1624,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1616,
											"end": 1628,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1640,
											"end": 1784,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1640,
											"end": 1784,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1724,
											"end": 1759,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1753,
											"end": 1758,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1724,
											"end": 1759,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1724,
											"end": 1759,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1724,
											"end": 1759,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1724,
											"end": 1759,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1722,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1714,
											"end": 1760,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1704,
											"end": 1778,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1704,
											"end": 1778,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1774,
											"end": 1775,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1771,
											"end": 1772,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1764,
											"end": 1776,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1704,
											"end": 1778,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1704,
											"end": 1778,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1640,
											"end": 1784,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1640,
											"end": 1784,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"getBalance()": "12065fe0",
							"invokeKill(address)": "fd5d8428"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract Kill\",\"name\":\"_kill\",\"type\":\"address\"}],\"name\":\"invokeKill\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"36_SelfDestruct.sol\":\"Helper\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"36_SelfDestruct.sol\":{\"keccak256\":\"0x32341c47f269743493de094a114a229fb6002277b65bf5ff681be5c45f40f0c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a39e8162ad18bc6ebbda864f4c626d2bfa734e3aac1f3e399fc4c0b72cc38ece\",\"dweb:/ipfs/QmT7dKspmfzfyzyjsXDqXucurzvT6QtjLZSANRr2dGViEs\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Kill": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "payable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "kill",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "testCall",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"36_SelfDestruct.sol\":134:387  contract Kill {... */\n  mstore(0x40, 0x80)\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"36_SelfDestruct.sol\":134:387  contract Kill {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x41c0e1b5\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xb7f05836\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"36_SelfDestruct.sol\":184:259  function kill() external {... */\n    tag_3:\n      tag_5\n      tag_6\n      jump\t// in\n    tag_5:\n      stop\n        /* \"36_SelfDestruct.sol\":311:385  function testCall() external pure returns(uint){... */\n    tag_4:\n      tag_7\n      tag_8\n      jump\t// in\n    tag_7:\n      mload(0x40)\n      tag_9\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"36_SelfDestruct.sol\":184:259  function kill() external {... */\n    tag_6:\n        /* \"36_SelfDestruct.sol\":240:250  msg.sender */\n      caller\n        /* \"36_SelfDestruct.sol\":219:252  selfdestruct(payable(msg.sender)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      selfdestruct\n        /* \"36_SelfDestruct.sol\":311:385  function testCall() external pure returns(uint){... */\n    tag_8:\n        /* \"36_SelfDestruct.sol\":353:357  uint */\n      0x00\n        /* \"36_SelfDestruct.sol\":375:378  123 */\n      0x7b\n        /* \"36_SelfDestruct.sol\":368:378  return 123 */\n      swap1\n      pop\n        /* \"36_SelfDestruct.sol\":311:385  function testCall() external pure returns(uint){... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:125   */\n    tag_14:\n        /* \"#utility.yul\":94:118   */\n      tag_16\n        /* \"#utility.yul\":112:117   */\n      dup2\n        /* \"#utility.yul\":94:118   */\n      tag_17\n      jump\t// in\n    tag_16:\n        /* \"#utility.yul\":89:92   */\n      dup3\n        /* \"#utility.yul\":82:119   */\n      mstore\n        /* \"#utility.yul\":7:125   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":131:353   */\n    tag_10:\n        /* \"#utility.yul\":224:228   */\n      0x00\n        /* \"#utility.yul\":262:264   */\n      0x20\n        /* \"#utility.yul\":251:260   */\n      dup3\n        /* \"#utility.yul\":247:265   */\n      add\n        /* \"#utility.yul\":239:265   */\n      swap1\n      pop\n        /* \"#utility.yul\":275:346   */\n      tag_19\n        /* \"#utility.yul\":343:344   */\n      0x00\n        /* \"#utility.yul\":332:341   */\n      dup4\n        /* \"#utility.yul\":328:345   */\n      add\n        /* \"#utility.yul\":319:325   */\n      dup5\n        /* \"#utility.yul\":275:346   */\n      tag_14\n      jump\t// in\n    tag_19:\n        /* \"#utility.yul\":131:353   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":359:436   */\n    tag_17:\n        /* \"#utility.yul\":396:403   */\n      0x00\n        /* \"#utility.yul\":425:430   */\n      dup2\n        /* \"#utility.yul\":414:430   */\n      swap1\n      pop\n        /* \"#utility.yul\":359:436   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220f3b080cf506768a7121723d520a133769723821db23aecde7d1b80cad6cc36be64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_5": {
									"entryPoint": null,
									"id": 5,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405260e1806100126000396000f3fe6080604052348015600f57600080fd5b506004361060325760003560e01c806341c0e1b5146037578063b7f0583614603f575b600080fd5b603d6059565b005b60456072565b604051605091906088565b60405180910390f35b3373ffffffffffffffffffffffffffffffffffffffff16ff5b6000607b905090565b60828160a1565b82525050565b6000602082019050609b6000830184607b565b92915050565b600081905091905056fea2646970667358221220f3b080cf506768a7121723d520a133769723821db23aecde7d1b80cad6cc36be64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0xE1 DUP1 PUSH2 0x12 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x32 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x41C0E1B5 EQ PUSH1 0x37 JUMPI DUP1 PUSH4 0xB7F05836 EQ PUSH1 0x3F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3D PUSH1 0x59 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x45 PUSH1 0x72 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x50 SWAP2 SWAP1 PUSH1 0x88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFDESTRUCT JUMPDEST PUSH1 0x0 PUSH1 0x7B SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x82 DUP2 PUSH1 0xA1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x9B PUSH1 0x0 DUP4 ADD DUP5 PUSH1 0x7B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURN 0xB0 DUP1 0xCF POP PUSH8 0x68A7121723D520A1 CALLER PUSH23 0x9723821DB23AECDE7D1B80CAD6CC36BE64736F6C634300 ADDMOD SMOD STOP CALLER ",
							"sourceMap": "134:253:0:-:0;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@kill_17": {
									"entryPoint": 89,
									"id": 17,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@testCall_25": {
									"entryPoint": 114,
									"id": 25,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 123,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 136,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 161,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:439:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "72:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "89:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "112:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "94:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "94:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "82:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "82:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "60:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "67:3:1",
														"type": ""
													}
												],
												"src": "7:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "229:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "239:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "251:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "262:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "247:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "247:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "239:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "319:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "332:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "343:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "328:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "328:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "275:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "275:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "275:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "201:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "213:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "224:4:1",
														"type": ""
													}
												],
												"src": "131:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "404:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "414:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "425:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "414:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "386:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "396:7:1",
														"type": ""
													}
												],
												"src": "359:77:1"
											}
										]
									},
									"contents": "{\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b506004361060325760003560e01c806341c0e1b5146037578063b7f0583614603f575b600080fd5b603d6059565b005b60456072565b604051605091906088565b60405180910390f35b3373ffffffffffffffffffffffffffffffffffffffff16ff5b6000607b905090565b60828160a1565b82525050565b6000602082019050609b6000830184607b565b92915050565b600081905091905056fea2646970667358221220f3b080cf506768a7121723d520a133769723821db23aecde7d1b80cad6cc36be64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x32 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x41C0E1B5 EQ PUSH1 0x37 JUMPI DUP1 PUSH4 0xB7F05836 EQ PUSH1 0x3F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3D PUSH1 0x59 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x45 PUSH1 0x72 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x50 SWAP2 SWAP1 PUSH1 0x88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFDESTRUCT JUMPDEST PUSH1 0x0 PUSH1 0x7B SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x82 DUP2 PUSH1 0xA1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x9B PUSH1 0x0 DUP4 ADD DUP5 PUSH1 0x7B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURN 0xB0 DUP1 0xCF POP PUSH8 0x68A7121723D520A1 CALLER PUSH23 0x9723821DB23AECDE7D1B80CAD6CC36BE64736F6C634300 ADDMOD SMOD STOP CALLER ",
							"sourceMap": "134:253:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;184:75;;;:::i;:::-;;311:74;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;184:75;240:10;219:33;;;311:74;353:4;375:3;368:10;;311:74;:::o;7:118:1:-;94:24;112:5;94:24;:::i;:::-;89:3;82:37;7:118;;:::o;131:222::-;224:4;262:2;251:9;247:18;239:26;;275:71;343:1;332:9;328:17;319:6;275:71;:::i;:::-;131:222;;;;:::o;359:77::-;396:7;425:5;414:16;;359:77;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "45000",
								"executionCost": "75",
								"totalCost": "45075"
							},
							"external": {
								"kill()": "27721",
								"testCall()": "337"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 134,
									"end": 387,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 134,
									"end": 387,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 134,
									"end": 387,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 134,
									"end": 387,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 134,
									"end": 387,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 134,
									"end": 387,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 134,
									"end": 387,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 134,
									"end": 387,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 134,
									"end": 387,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 134,
									"end": 387,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f3b080cf506768a7121723d520a133769723821db23aecde7d1b80cad6cc36be64736f6c63430008070033",
									".code": [
										{
											"begin": 134,
											"end": 387,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 134,
											"end": 387,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 134,
											"end": 387,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 134,
											"end": 387,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 134,
											"end": 387,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 134,
											"end": 387,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 134,
											"end": 387,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 134,
											"end": 387,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 134,
											"end": 387,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 134,
											"end": 387,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 134,
											"end": 387,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 134,
											"end": 387,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 134,
											"end": 387,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 134,
											"end": 387,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 134,
											"end": 387,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 134,
											"end": 387,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 134,
											"end": 387,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 134,
											"end": 387,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 134,
											"end": 387,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 134,
											"end": 387,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 134,
											"end": 387,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 134,
											"end": 387,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 134,
											"end": 387,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 134,
											"end": 387,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 134,
											"end": 387,
											"name": "PUSH",
											"source": 0,
											"value": "41C0E1B5"
										},
										{
											"begin": 134,
											"end": 387,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 134,
											"end": 387,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 134,
											"end": 387,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 134,
											"end": 387,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 134,
											"end": 387,
											"name": "PUSH",
											"source": 0,
											"value": "B7F05836"
										},
										{
											"begin": 134,
											"end": 387,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 134,
											"end": 387,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 134,
											"end": 387,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 134,
											"end": 387,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 134,
											"end": 387,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 134,
											"end": 387,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 134,
											"end": 387,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 134,
											"end": 387,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 184,
											"end": 259,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 184,
											"end": 259,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 184,
											"end": 259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 184,
											"end": 259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 184,
											"end": 259,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 184,
											"end": 259,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 184,
											"end": 259,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 184,
											"end": 259,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 311,
											"end": 385,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 311,
											"end": 385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 311,
											"end": 385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 311,
											"end": 385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 311,
											"end": 385,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 311,
											"end": 385,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 311,
											"end": 385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 311,
											"end": 385,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 311,
											"end": 385,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 311,
											"end": 385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 311,
											"end": 385,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 311,
											"end": 385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 311,
											"end": 385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 311,
											"end": 385,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 311,
											"end": 385,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 311,
											"end": 385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 311,
											"end": 385,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 311,
											"end": 385,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 311,
											"end": 385,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 311,
											"end": 385,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 311,
											"end": 385,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 311,
											"end": 385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 311,
											"end": 385,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 184,
											"end": 259,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 184,
											"end": 259,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 240,
											"end": 250,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 219,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 219,
											"end": 252,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 219,
											"end": 252,
											"name": "SELFDESTRUCT",
											"source": 0
										},
										{
											"begin": 311,
											"end": 385,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 311,
											"end": 385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 353,
											"end": 357,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 375,
											"end": 378,
											"name": "PUSH",
											"source": 0,
											"value": "7B"
										},
										{
											"begin": 368,
											"end": 378,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 368,
											"end": 378,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 311,
											"end": 385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 311,
											"end": 385,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 125,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 7,
											"end": 125,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 94,
											"end": 118,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 112,
											"end": 117,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 94,
											"end": 118,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 94,
											"end": 118,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 94,
											"end": 118,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 94,
											"end": 118,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 89,
											"end": 92,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 82,
											"end": 119,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7,
											"end": 125,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 125,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 125,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 131,
											"end": 353,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 131,
											"end": 353,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 224,
											"end": 228,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 262,
											"end": 264,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 251,
											"end": 260,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 247,
											"end": 265,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 239,
											"end": 265,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 239,
											"end": 265,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 275,
											"end": 346,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 343,
											"end": 344,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 332,
											"end": 341,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 328,
											"end": 345,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 319,
											"end": 325,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 275,
											"end": 346,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 275,
											"end": 346,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 275,
											"end": 346,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 275,
											"end": 346,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 131,
											"end": 353,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 131,
											"end": 353,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 131,
											"end": 353,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 131,
											"end": 353,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 131,
											"end": 353,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 359,
											"end": 436,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 359,
											"end": 436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 396,
											"end": 403,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 425,
											"end": 430,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 414,
											"end": 430,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 414,
											"end": 430,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 359,
											"end": 436,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 359,
											"end": 436,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 359,
											"end": 436,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 359,
											"end": 436,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"kill()": "41c0e1b5",
							"testCall()": "b7f05836"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"kill\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testCall\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"36_SelfDestruct.sol\":\"Kill\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"36_SelfDestruct.sol\":{\"keccak256\":\"0x32341c47f269743493de094a114a229fb6002277b65bf5ff681be5c45f40f0c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a39e8162ad18bc6ebbda864f4c626d2bfa734e3aac1f3e399fc4c0b72cc38ece\",\"dweb:/ipfs/QmT7dKspmfzfyzyjsXDqXucurzvT6QtjLZSANRr2dGViEs\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"36_SelfDestruct.sol": {
				"ast": {
					"absolutePath": "36_SelfDestruct.sol",
					"exportedSymbols": {
						"Helper": [
							55
						],
						"Kill": [
							26
						]
					},
					"id": 56,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 26,
							"linearizedBaseContracts": [
								26
							],
							"name": "Kill",
							"nameLocation": "143:4:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 4,
										"nodeType": "Block",
										"src": "176:2:0",
										"statements": []
									},
									"id": 5,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "165:2:0"
									},
									"returnParameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "176:0:0"
									},
									"scope": 26,
									"src": "154:24:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 16,
										"nodeType": "Block",
										"src": "209:50:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 11,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "240:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 12,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "240:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 10,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "232:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 9,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "232:8:0",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 13,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "232:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 8,
														"name": "selfdestruct",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967275,
														"src": "219:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_selfdestruct_nonpayable$_t_address_payable_$returns$__$",
															"typeString": "function (address payable)"
														}
													},
													"id": 14,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "219:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 15,
												"nodeType": "ExpressionStatement",
												"src": "219:33:0"
											}
										]
									},
									"functionSelector": "41c0e1b5",
									"id": 17,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "kill",
									"nameLocation": "193:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "197:2:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "209:0:0"
									},
									"scope": 26,
									"src": "184:75:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 24,
										"nodeType": "Block",
										"src": "358:27:0",
										"statements": [
											{
												"expression": {
													"hexValue": "313233",
													"id": 22,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "375:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_123_by_1",
														"typeString": "int_const 123"
													},
													"value": "123"
												},
												"functionReturnParameters": 21,
												"id": 23,
												"nodeType": "Return",
												"src": "368:10:0"
											}
										]
									},
									"functionSelector": "b7f05836",
									"id": 25,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "testCall",
									"nameLocation": "320:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "328:2:0"
									},
									"returnParameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "353:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 19,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "353:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "352:6:0"
									},
									"scope": 26,
									"src": "311:74:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 56,
							"src": "134:253:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 55,
							"linearizedBaseContracts": [
								55
							],
							"name": "Helper",
							"nameLocation": "399:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 29,
										"nodeType": "Block",
										"src": "433:2:0",
										"statements": []
									},
									"id": 30,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "423:2:0"
									},
									"returnParameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "433:0:0"
									},
									"scope": 55,
									"src": "412:23:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 41,
										"nodeType": "Block",
										"src": "491:45:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 37,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "516:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_Helper_$55",
																	"typeString": "contract Helper"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_Helper_$55",
																	"typeString": "contract Helper"
																}
															],
															"id": 36,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "508:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 35,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "508:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 38,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "508:13:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 39,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "508:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 34,
												"id": 40,
												"nodeType": "Return",
												"src": "501:28:0"
											}
										]
									},
									"functionSelector": "12065fe0",
									"id": 42,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBalance",
									"nameLocation": "450:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "460:2:0"
									},
									"returnParameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "486:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 32,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "486:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "485:6:0"
									},
									"scope": 55,
									"src": "441:95:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "582:29:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 48,
															"name": "_kill",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 45,
															"src": "592:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_Kill_$26",
																"typeString": "contract Kill"
															}
														},
														"id": 50,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "kill",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 17,
														"src": "592:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
															"typeString": "function () external"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "592:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "592:12:0"
											}
										]
									},
									"functionSelector": "fd5d8428",
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "invokeKill",
									"nameLocation": "551:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "_kill",
												"nameLocation": "567:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "562:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_Kill_$26",
													"typeString": "contract Kill"
												},
												"typeName": {
													"id": 44,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 43,
														"name": "Kill",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 26,
														"src": "562:4:0"
													},
													"referencedDeclaration": 26,
													"src": "562:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Kill_$26",
														"typeString": "contract Kill"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "561:12:0"
									},
									"returnParameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "582:0:0"
									},
									"scope": 55,
									"src": "542:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 56,
							"src": "390:223:0",
							"usedErrors": []
						}
					],
					"src": "32:581:0"
				},
				"id": 0
			}
		}
	}
}